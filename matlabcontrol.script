def matlabcontrol():
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_tool_voltage(24)
  set_standard_digital_input_action(0, "default")
  set_standard_digital_input_action(1, "default")
  set_standard_digital_input_action(2, "default")
  set_standard_digital_input_action(3, "default")
  set_standard_digital_input_action(4, "default")
  set_standard_digital_input_action(5, "default")
  set_standard_digital_input_action(6, "default")
  set_standard_digital_input_action(7, "default")
  set_tool_digital_input_action(0, "default")
  set_tool_digital_input_action(1, "default")
  set_tcp(p[0.0,0.0,0.213,0.0,0.0,0.0])
  set_payload(0.5)
  set_gravity([0.0, 0.0, 9.82])
  def SubProgram_1():
    receive_data=socket_read_ascii_float(6)
    if (receive_data[0] != 6):
      socket_send_string("0")
    else:
      socket_send_string("1")
      global pointer=0
      while (pointer<receive_data[0]):
        Move_To_Pos[pointer]=receive_data[pointer+1]
        global pointer=pointer+1
      end
      global task=[0,0]
      global moving=1
    end
  end
  def SubProgram_2():
    pose_1=get_forward_kin()
    socket_send_string(pose_1)
  end
  def SubProgram_3():
    pose_1=get_forward_kin()
    global pointer=0
    while (pointer<receive_data[0]):
      Move_To_Pos[pointer]=pose_1[pointer]
      global pointer=pointer+1
    end
  end
  $ 1 "BeforeStart"
  $ 2 "receive_data≔[6,0,0,0,0,0,0]"
  global receive_data=[6,0,0,0,0,0,0]
  $ 3 "pi≔3.1415"
  global pi=3.1415
  $ 4 "Move_To_Pos≔p[0.5,0,0.2,pi,0,0]"
  global Move_To_Pos=p[0.5,0,0.2,pi,0,0]
  $ 5 "movej([0.23,-1.57,-1.6,-1.52,1.57,-1.34],v=0.2)"
  movej([0.23,-1.57,-1.6,-1.52,1.57,-1.34],v=0.2)
  $ 6 "movej(get_inverse_kin(Move_To_Pos),v=0.4)"
  movej(get_inverse_kin(Move_To_Pos),v=0.4)
  $ 7 "Call SubProgram_3"
  SubProgram_3()
  $ 8 "socket_open('172.20.13.1',30000)"
  socket_open("172.20.13.1",30000)
  $ 9 "task≔[0,0]"
  global task=[0,0]
  $ 10 "coop≔0"
  global coop=0
  $ 11 "moving≔0"
  global moving=0
  $ 42 "Thread_1"
  thread Thread_1():
    while (True):
      if (coop == 1):
        while (coop == 1):
          sleep(0.01)
        end
        global coop=0
        SubProgram_3()
      else:
        movel(Move_To_Pos,a=0.4,v=0.4,r=0)
        if (moving == 1):
          sleep(0.05)
          socket_send_string("X")
          global moving=0
        end
        sleep(0.01)
      end
    end
  end
  threadId_Thread_1 = run Thread_1()
  while (True):
    $ 12 "Robot Program"
    $ 17 "task=socket_read_ascii_float(1)"
    task=socket_read_ascii_float(1)
    $ 18 "If task[1]≟2"
    if (task[1] == 2):
      $ 19 "Call SubProgram_2"
      SubProgram_2()
      $ 20 "task≔[0,0]"
      global task=[0,0]
    else:
      $ 21 "ElseIf task[1]≟3"
      if (task[1] == 3):
        $ 22 "coop≔1"
        global coop=1
        $ 23 "teach_mode()"
        teach_mode()
        $ 24 "socket_send_string('1')"
        socket_send_string("1")
        $ 25 "task≔[0,0]"
        global task=[0,0]
      else:
        $ 26 "ElseIf task[1]≟4"
        if (task[1] == 4):
          $ 27 "coop≔0"
          global coop=0
          $ 28 "end_teach_mode()"
          end_teach_mode()
          $ 29 "socket_send_string('1')"
          socket_send_string("1")
          $ 30 "task≔[0,0]"
          global task=[0,0]
        else:
          $ 31 "ElseIf task[1]≟5"
          if (task[1] == 5):
            $ 32 "set_tool_digital_out(0, True )"
            set_tool_digital_out(0,  True  )
            $ 33 "socket_send_string('1')"
            socket_send_string("1")
            $ 34 "task≔[0,0]"
            global task=[0,0]
          else:
            $ 35 "ElseIf task[1]≟6"
            if (task[1] == 6):
              $ 36 "set_tool_digital_out(0, False )"
              set_tool_digital_out(0,  False  )
              $ 37 "socket_send_string('1')"
              socket_send_string("1")
              $ 38 "task≔[0,0]"
              global task=[0,0]
            else:
              $ 39 "ElseIf task[1]≟1"
              if (task[1] == 1):
                $ 40 "Call SubProgram_1"
                SubProgram_1()
              end
            end
          end
        end
      end
    end
    $ 41 "Wait: 0.01"
    sleep(0.01)
  end
end
